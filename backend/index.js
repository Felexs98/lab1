require('dotenv').config();
const express = require('express');
const cors = require('cors');
const { authenticateDB } = require('./config/db');
const { syncDatabase } = require('./models');
const eventRoutes = require('./routes/events'); // –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
const userRoutes = require('./routes/users');

const app = express();

app.use(express.json()); // –û–±—Ä–∞–±–æ—Ç–∫–∞ JSON-–∑–∞–ø—Ä–æ—Å–æ–≤
app.use(cors()); // –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫—Ä–æ—Å—Å-–¥–æ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

const PORT = process.env.PORT || 5000;

authenticateDB().then(async () => {
    await syncDatabase();

    // üî• –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
    app.use('/events', eventRoutes);
	app.use('/users', userRoutes);

    app.get('/', (req, res) => {
        res.json({ message: '–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!' });
    });

    app.listen(PORT, () => {
        console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    });
}).catch((err) => {
    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
    process.exit(1);
});
